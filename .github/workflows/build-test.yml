name: build-and-test

on:
  pull_request:
    branches: [main]
 

jobs:
  build-and-test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up java (jdk-11)
      uses: actions/setup-java@v1
      with:
        java-version: 11
         
    - name: Install Gradle
      run: npm i gradle
      
    - name: Log originating commit ID
      run: echo "full_sha1=$(git cat-file -p HEAD | grep parent | tail -1 | cut -d' ' -f2)" >> $GITHUB_ENV 
 
    - name: Tag revision
      if: github.event_name == 'pull_request'
      run: echo "REVISION=#${{ github.event.number }}.$(git rev-parse --short ${{ env.full_sha1 }})" >> $GITHUB_ENV

    # - name: Prepare Codeclimate reporting tools
    #   env:
    #     GIT_COMMIT_SHA: ${{ env.full_sha1 }} 
    #     GIT_BRANCH: ${{ github.head_ref }}
    #   run: |
    #     curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
    #     chmod +x ./cc-test-reporter
    #     ./cc-test-reporter before-build
      
    - name: Setup Gradle build
      uses: gradle/gradle-build-action@v2
      
    - name: Execute Gradle build
      run: gradle build

    # - name: Finish and report Codeclimate statistics
    #   env:
    #     GIT_COMMIT_SHA: ${{ env.full_sha1 }} 
    #     GIT_BRANCH: ${{ github.head_ref }}
    #     JACOCO_SOURCE_PATH: src/main/java
    #   run: |
    #     ./cc-test-reporter format-coverage -t jacoco target/site/jacoco/jacoco.xml --output "codeclimate.java.json"
    #     ./cc-test-reporter format-coverage -t clover target/coverage/client/clover.xml --output "codeclimate.js.json"
    #     ./cc-test-reporter sum-coverage --output "codeclimate.combined.json" codeclimate.*.json
    #     ./cc-test-reporter upload-coverage --input "codeclimate.combined.json"
